<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ABCs on OxwoBlog</title>
    <link>http://localhost:1313/zh/abc/</link>
    <description>Recent content in ABCs on OxwoBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 31 Mar 2024 08:53:59 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/zh/abc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Guuu</title>
      <link>http://localhost:1313/zh/abc/guuu/</link>
      <pubDate>Sun, 31 Mar 2024 08:53:59 +0800</pubDate>
      <guid>http://localhost:1313/zh/abc/guuu/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.&#xA;Save it somewhere specific as we will be using it in the next step.&#xA;More complete instructions are available at Install Hugo&#xA;Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.&#xA;Follow the following steps:&#xA;Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    <item>
      <title>Dsa</title>
      <link>http://localhost:1313/zh/abc/dsa/</link>
      <pubDate>Sun, 31 Mar 2024 08:51:53 +0800</pubDate>
      <guid>http://localhost:1313/zh/abc/dsa/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.&#xA;This document is a brief primer on using Go templates.</description>
    </item>
  </channel>
</rss>
